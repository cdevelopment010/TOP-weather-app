(()=>{"use strict";var e={151:(e,n,t)=>{t.d(n,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800;900&display=swap);"]),i.push([e.id,'*{margin:0;padding:0;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box}body{color:#5f6f77;background:#c8d4da;font-family:"Inter",sans-serif}#root{color:#5f6f77;min-height:100vh;height:100%;width:80%;margin:0 auto;display:flex;flex-direction:column;justify-content:space-between}header,footer{min-height:10vh;background-color:#c8d4da;display:grid;gap:25px;align-items:center;justify-content:center;padding:10px 25px}@media screen and (min-width: 48em){header,footer{display:flex;justify-content:space-between;align-items:center}}header .searchContainer,header .linkContainer,footer .searchContainer,footer .linkContainer{display:flex;gap:10px;align-items:center;justify-content:center}header .searchContainer i,header .linkContainer i,footer .searchContainer i,footer .linkContainer i{cursor:pointer}header .searchContainer i:hover,header .linkContainer i:hover,footer .searchContainer i:hover,footer .linkContainer i:hover{color:#fff}header a:hover,footer a:hover{color:#fff}a{color:inherit;text-decoration:none;font-size:1.5em}h1{text-align:center}form #search-icon{background:none;border:none;outline:none;color:#fff;cursor:pointer}form #search-icon:hover{color:#5f6f77}.main-container{display:grid;gap:20px}#main-weather,#future-weather,#error-card{padding:25px;display:grid;align-items:center;background-color:#fff;box-shadow:0 4px 4px 0 rgba(0,0,0,.25);border-radius:50px;gap:5px}#main-weather{grid-template-columns:1fr;justify-items:center;align-items:center;grid-template-areas:"temp" "temp" "loc" "img" "dateTime" "weather" "wind" "pressure"}#main-weather #temp{grid-area:temp;font-size:4em;font-weight:bold;text-align:center}#main-weather #location{grid-area:loc;font-size:3em;text-align:center}#main-weather #date-time{grid-area:dateTime;font-weight:bold}#main-weather img{grid-area:img}#main-weather #weather{grid-area:weather}#main-weather #wind{grid-area:wind}#main-weather #pressure{grid-area:pressure}#future-weather{grid-template-columns:repeat(1, 1fr)}#future-weather .future-card{position:relative;display:grid;align-items:center;justify-content:center}#future-weather .future-card .temp{font-size:1.2em;font-weight:bold}#future-weather .future-card p{text-align:center}#future-weather .future-card::after{height:3px;width:100%;bottom:-5px;content:"";position:absolute;background:#c8d4da}#future-weather :last-child::after{height:0}#error-card{align-items:center;justify-items:center}#error-card #error-title{text-align:center}.switch{position:relative;display:inline-block;width:60px;height:34px}.switch input{opacity:0;width:0;height:0}.slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#5f6f77;-webkit-transition:.4s;transition:.4s}.slider:before{position:absolute;content:"C";display:flex;align-items:center;justify-content:center;height:26px;width:26px;left:4px;bottom:4px;background-color:#f78763;-webkit-transition:.4s;transition:.4s}input:checked+.slider{background-color:#5f6f77}input:focus+.slider{box-shadow:0 0 1px #5f6f77}input:checked+.slider:before{-webkit-transform:translateX(26px);-ms-transform:translateX(26px);transform:translateX(26px);content:"F";background-color:#63cbf7}.slider.round{border-radius:34px}.slider.round:before{border-radius:50%}@media screen and (min-width: 48em){#main-weather,#future-weather{border-radius:100px}#main-weather{grid-template-columns:.6fr .2fr .2fr;grid-template-areas:"temp  dateTime ." "temp  weather img" "loc  wind img" "loc  pressure ."}#main-weather #temp{font-size:4em}#main-weather #location{font-size:3em}#future-weather{grid-template-columns:repeat(6, 1fr)}#future-weather .future-card{position:relative;display:grid;align-items:center;justify-content:center}#future-weather .future-card .temp{font-size:1.2em;font-weight:bold}#future-weather .future-card p{text-align:center}#future-weather .future-card::after{height:100%;width:3px;right:0;content:"";position:absolute;background:#c8d4da}#future-weather :last-child::after{height:0}}',"",{version:3,sources:["webpack://./src/sass/main.scss","webpack://./src/sass/variables.scss","webpack://./src/sass/mixins.scss"],names:[],mappings:"AAIA,EACI,QAAA,CACA,SAAA,CACA,0BAAA,CACA,6BAAA,CACA,qBAAA,CAGJ,KACI,aCTO,CDUP,kBCbU,CDcV,8BAAA,CAGJ,MACI,aCfO,CDgBP,gBAAA,CACA,WAAA,CACA,SAAA,CACA,aAAA,CACA,YAAA,CACA,qBAAA,CACA,6BAAA,CAIJ,cACI,eAAA,CACA,wBC/BU,CDgCV,YAAA,CACA,QAAA,CACA,kBAAA,CACA,sBAAA,CACA,iBAAA,CElCI,oCF2BR,cAUQ,YAAA,CACA,6BAAA,CACA,kBAAA,CAAA,CAGJ,4FACI,YAAA,CACA,QAAA,CACA,kBAAA,CACA,sBAAA,CAEA,oGACI,cAAA,CAGJ,4HACI,UCxDF,CD4DN,8BACI,UC7DE,CDkEV,EACI,aAAA,CACA,oBAAA,CACA,eAAA,CAGJ,GACI,iBAAA,CAIA,kBACI,eAAA,CACA,WAAA,CACA,YAAA,CACA,UCjFE,CDkFF,cAAA,CAEA,wBACI,aCjFD,CDuFX,gBACI,YAAA,CACA,QAAA,CAKJ,0CACI,YAAA,CACA,YAAA,CACA,kBAAA,CACA,qBCtGM,CDuGN,sCAAA,CACA,kBAAA,CACA,OAAA,CAGJ,cACI,yBAAA,CACA,oBAAA,CACA,kBAAA,CACA,oFAAA,CAUA,oBACI,cAAA,CACA,aAAA,CACA,gBAAA,CACA,iBAAA,CAEJ,wBACI,aAAA,CACA,aAAA,CACA,iBAAA,CAEJ,yBACI,kBAAA,CACA,gBAAA,CAGJ,kBACI,aAAA,CAEJ,uBACI,iBAAA,CAEJ,oBACI,cAAA,CAEJ,wBACI,kBAAA,CAOR,gBACI,oCAAA,CAEA,6BACI,iBAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CAEA,mCACI,eAAA,CACA,gBAAA,CAGJ,+BACI,iBAAA,CAGJ,oCACI,UAAA,CACA,UAAA,CACA,WAAA,CACA,UAAA,CACA,iBAAA,CACA,kBClLE,CDuLN,mCACI,QAAA,CAMZ,YACI,kBAAA,CACA,oBAAA,CAEA,yBACI,iBAAA,CAKR,QACI,iBAAA,CACA,oBAAA,CACA,UAAA,CACA,WAAA,CAIF,cACE,SAAA,CACA,OAAA,CACA,QAAA,CAIF,QACE,iBAAA,CACA,cAAA,CACA,KAAA,CACA,MAAA,CACA,OAAA,CACA,QAAA,CACA,wBC3NO,CD4NP,sBAAA,CACA,cAAA,CAEA,eACI,iBAAA,CACA,WAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,WAAA,CACA,UAAA,CACA,QAAA,CACA,UAAA,CACA,wBC3OQ,CD4OR,sBAAA,CACA,cAAA,CAKN,sBACE,wBCjPO,CDoPT,oBACE,0BAAA,CAGF,6BACE,kCAAA,CACA,8BAAA,CACA,0BAAA,CACA,WAAA,CACA,wBC9Pe,CDkQjB,cACE,kBAAA,CAGF,qBACE,iBAAA,CAIF,oCAEE,8BACI,mBAAA,CAGJ,cACI,oCAAA,CACA,4FAAA,CAMA,oBACI,aAAA,CAGJ,wBACI,aAAA,CAIR,gBACI,oCAAA,CAEA,6BACI,iBAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CAEA,mCACI,eAAA,CACA,gBAAA,CAGJ,+BACI,iBAAA,CAGJ,oCACI,WAAA,CACA,SAAA,CACA,OAAA,CACA,UAAA,CACA,iBAAA,CACA,kBC5TF,CDiUF,mCACI,QAAA,CAAA",sourcesContent:['@import url(\'https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800;900&display=swap\');\n@import \'./variables.scss\'; \n@import \'./mixins.scss\';\n\n* {\n    margin: 0; \n    padding: 0; \n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n}\n\nbody {\n    color: $text-col;\n    background: $primary-col;\n    font-family: \'Inter\', sans-serif;\n}\n\n#root {\n    color: $text-col;\n    min-height: 100vh;\n    height: 100%; \n    width: 80%; \n    margin: 0 auto;\n    display: flex; \n    flex-direction: column;\n    justify-content: space-between;\n\n}\n\nheader, footer {\n    min-height: 10vh;\n    background-color: $primary-col;\n    display: grid; \n    gap: 25px; \n    align-items: center;\n    justify-content: center;\n    padding: 10px 25px; \n\n    @include resize(\'tablet\') {\n        display: flex; \n        justify-content: space-between;\n        align-items: center;\n    }\n\n    .searchContainer, .linkContainer {\n        display: flex; \n        gap: 10px; \n        align-items: center;\n        justify-content: center;\n\n        i {\n            cursor: pointer;\n        }\n\n        i:hover {\n            color: $card-bg; \n        }\n    }\n\n    a:hover {\n        color: $card-bg; \n    }\n}\n\n\na {\n    color: inherit;\n    text-decoration: none;\n    font-size: 1.5em;\n}\n\nh1 {\n    text-align: center;\n}\n\nform {\n    #search-icon {\n        background: none;\n        border: none;\n        outline: none;\n        color: $card-bg; \n        cursor: pointer;\n\n        &:hover {\n            color:$text-col;\n        }\n    }\n}\n\n\n.main-container {\n    display: grid;\n    gap: 20px;\n\n}\n\n\n#main-weather, #future-weather, #error-card {\n    padding: 25px; \n    display: grid; \n    align-items: center;\n    background-color: $card-bg; \n    box-shadow: 0 4px 4px 0 rgba(0,0,0,0.25);\n    border-radius: 50px;\n    gap: 5px;\n}\n\n#main-weather {\n    grid-template-columns: 1fr;\n    justify-items: center;\n    align-items: center;\n    grid-template-areas: "temp"\n        "temp"\n        "loc"\n        "img"\n        "dateTime"\n        "weather"\n        "wind"\n        "pressure"\n    ;\n\n    #temp {\n        grid-area: temp; \n        font-size: 4em;\n        font-weight: bold; \n        text-align: center;\n    }\n    #location {\n        grid-area: loc; \n        font-size: 3em;\n        text-align: center;\n    }\n    #date-time {\n        grid-area: dateTime; \n        font-weight: bold; \n\n    }\n    img {\n        grid-area: img; \n    }\n    #weather {\n        grid-area: weather;\n    }\n    #wind {\n        grid-area: wind;\n    }\n    #pressure {\n        grid-area: pressure;\n    }\n}\n\n// future weather\n\n\n#future-weather {\n    grid-template-columns: repeat(1, 1fr);\n\n    .future-card {\n        position: relative;\n        display: grid; \n        align-items: center;\n        justify-content: center;\n\n        .temp {\n            font-size: 1.2em; \n            font-weight: bold;\n        }\n\n        p {\n            text-align: center;\n        }\n\n        &::after {\n            height: 3px; \n            width: 100%; \n            bottom: -5px; \n            content: \'\'; \n            position: absolute; \n            background: $primary-col;\n        }\n    }\n\n    :last-child {\n        &::after {\n            height: 0; \n        }\n    }\n}\n\n// 404 box\n#error-card {\n    align-items: center;\n    justify-items: center;\n\n    #error-title {\n        text-align: center;\n    }\n}\n\n/* The switch - the box around the slider */\n.switch {\n    position: relative;\n    display: inline-block;\n    width: 60px;\n    height: 34px;\n  }\n  \n  /* Hide default HTML checkbox */\n  .switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n  \n  /* The slider */\n  .slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: $text-col;\n    -webkit-transition: .4s;\n    transition: .4s;\n\n    &:before {\n        position: absolute;\n        content: "C";\n        display: flex; \n        align-items: center;\n        justify-content: center;\n        height: 26px;\n        width: 26px;\n        left: 4px;\n        bottom: 4px;\n        background-color: $secondary-col;\n        -webkit-transition: .4s;\n        transition: .4s;\n      }\n  }\n  \n  \n  input:checked + .slider {\n    background-color: $text-col;;\n  }\n  \n  input:focus + .slider {\n    box-shadow: 0 0 1px $text-col;;\n  }\n  \n  input:checked + .slider:before {\n    -webkit-transform: translateX(26px);\n    -ms-transform: translateX(26px);\n    transform: translateX(26px);\n    content: "F";\n    background-color: $toggle-secondary;\n  }\n  \n  /* Rounded sliders */\n  .slider.round {\n    border-radius: 34px;\n  }\n  \n  .slider.round:before {\n    border-radius: 50%;\n  }\n\n\n  @media screen and (min-width: 48em ){\n\n    #main-weather, #future-weather {\n        border-radius: 100px;\n    }\n    \n    #main-weather {\n        grid-template-columns: 0.6fr .2fr 0.2fr;\n        grid-template-areas: "temp  dateTime ."\n        "temp  weather img"\n        "loc  wind img"\n        "loc  pressure ."\n    ;\n\n        #temp {\n            font-size: 4em;\n        }\n\n        #location {\n            font-size: 3em;\n        }\n    }\n\n    #future-weather {\n        grid-template-columns: repeat(6, 1fr); \n\n        .future-card {\n            position: relative;\n            display: grid; \n            align-items: center;\n            justify-content: center;\n    \n            .temp {\n                font-size: 1.2em; \n                font-weight: bold;\n            }\n    \n            p {\n                text-align: center;\n            }\n    \n            &::after {\n                height: 100%; \n                width: 3px; \n                right: 0; \n                content: \'\'; \n                position: absolute; \n                background: $primary-col;\n            }\n        }\n    \n        :last-child {\n            &::after {\n                height: 0; \n            }\n        }\n    }\n  }',"$card-bg: white; \n$primary-col: #C8D4DA; \n$secondary-col: #F78763; \n$toggle-secondary: #63CBF7;\n$text-col: #5F6F77;","@mixin resize($bp) {\n\n    @if $bp == 'tablet' {\n        @media screen and (min-width: 48em) {\n            @content;\n        }\n    }\n    @if $bp == 'laptop' {\n        @media screen and (min-width: 64em) {\n            @content;\n        }\n    }\n    @if $bp == 'desktop' {\n        @media screen and (min-width: 90em) {\n            @content;\n        }\n    }\n}"],sourceRoot:""}]);const A=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],A=0;A<e.length;A++){var c=e[A],s=r.base?c[0]+r.base:c[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=o(u,r);r.byIndex=A,n.splice(A,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var A=t(a[i]);n[A].references--}for(var c=r(e,o),s=0;s<a.length;s++){var d=t(a[s]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}a=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),a=t(569),i=t.n(a),A=t(565),c=t.n(A),s=t(216),d=t.n(s),l=t(589),p=t.n(l),u=t(151),m={};async function C(e){const n=`https://api.openweathermap.org/data/2.5/forecast?q=${e}&appid=cb561535d4382bd95e0f2ab965974e4e`;try{const e=await fetch(n);!function(e){const n=e.list;console.log("process data"),console.log(e);const t=function(e,n){const t=document.createElement("div"),r=document.createElement("p"),o=document.createElement("img"),a=document.createElement("p"),i=document.createElement("p"),A=document.createElement("p"),c=document.createElement("p"),s=document.createElement("p");let d=new Date(e.dt_txt);return r.innerText=n,a.innerText=new Intl.DateTimeFormat("en-GB",{weekday:"short"}).format(d)+" | "+new Intl.DateTimeFormat("en-GB",{hour12:!1,hour:"numeric",minute:"numeric"}).format(d),i.innerHTML=Math.round(10*(e.main.temp-273))/10+" &#8451;",A.innerText=e.weather[0].main,c.innerText=e.main.pressure+" hPa",s.innerText=e.wind.speed+" m/s",o.src=`https://openweathermap.org/img/wn/${e.weather[0].icon}@2x.png`,i.classList="temp",i.id="temp",r.id="location",a.id="date-time",A.id="weather",c.id="pressure",s.id="wind",t.append(r),t.append(o),t.append(a),t.append(i),t.append(A),t.append(c),t.append(s),t.id="main-weather",t}(n[0],`${e.city.name}, ${e.city.country}`);!function(e,n){console.log("managedisplay");const t=document.createElement("div");t.append(e),t.append(n),t.className="main-container",document.querySelector("#main").append(t)}(t,function(e,n,t){const r=document.createElement("div");return e.forEach(((e,n)=>{if(n>=0&&n<=5){const n=document.createElement("div"),t=document.createElement("img"),o=document.createElement("p"),a=document.createElement("p");let i=new Date(e.dt_txt);o.innerText=new Intl.DateTimeFormat("en-GB",{weekday:"short"}).format(i)+" | "+new Intl.DateTimeFormat("en-GB",{hour12:!1,hour:"numeric",minute:"numeric"}).format(i),a.innerText=Math.round(10*(e.main.temp-273))/10+" C"||0,t.src=`https://openweathermap.org/img/wn/${e.weather[0].icon}@2x.png`,a.classList="temp",n.append(a),n.append(t),n.append(o),n.className="future-card",r.append(n)}})),r.id="future-weather",r}(n))}(await e.json())}catch(e){console.log(e),function(){const e=document.createElement("div"),n=document.createElement("p"),t=document.createElement("h2");t.innerText="Oh No! Looks like there was an error.",t.id="error-title",n.innerText="Please try searching again.",n.id="error-text",e.id="error-card",e.append(t),e.append(n),document.querySelector("#main").append(e)}()}}m.styleTagTransform=p(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals,function(){const e=document.createElement("header"),n=document.createElement("h1"),t=document.createElement("form"),r=document.createElement("input"),o=document.createElement("button");let a=function(){const e=document.createElement("label"),n=document.createElement("input"),t=document.createElement("span");return e.className="switch",n.type="checkbox",t.className="slider round",e.append(n),e.append(t),e}();a.id="toggle",n.innerText="Weather App",r.type="text",r.placeholder="City, country code",r.id="search-box",o.className="fa-solid fa-magnifying-glass",o.id="search-icon",t.append(a),t.append(r),t.append(o),t.className="searchContainer",e.append(n),e.append(t),document.querySelector("#header").append(e);const i=document.querySelector("form");document.querySelector("#toggle").querySelector("input").addEventListener("click",(function(){!function(e){const n=e.checked;document.querySelectorAll(".temp").forEach((e=>{let t=e.innerText.split(" ")[0];e.innerHTML=n?Math.round(10*(1.8*t+32))/10+" &#8457;":Math.round(5/9*(t-32)*10)/10+" &#8451;"}))}(this)})),i.addEventListener("submit",(function(e){e.preventDefault(),function(){const e=document.querySelector("#search-box").value;document.querySelector("#main").innerHTML="",console.log(e),C(e),document.querySelector("#search-box").value=""}()}))}(),C("Durham, UK"),function(){const e=document.createElement("footer"),n=document.createElement("a"),t=document.createElement("div"),r=document.createElement("a"),o=document.createElement("a");n.innerText="The Odin Project",n.href="https://www.theodinproject.com/",n.target="_blank",r.innerHTML='<i class="fa-brands fa-github"></i>',r.href="https://github.com/cdevelopment010/",r.target="_blank",o.innerHTML='<i class="fa-brands fa-youtube"></i>',o.href="https://www.youtube.com/channel/UCtHK20C4Dw4fcs7kZDl4QPQ",o.target="_blank",t.append(r),t.append(o),t.className="linkContainer",e.append(n),e.append(t),document.querySelector("#footer").append(e)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEVBQUVzSCxpQkV2Q0ssV0FDWCxNQUFNTixFQUFRdEgsU0FBU0MsY0FBYyxlQUFlNEgsTUFHcEQ3SCxTQUFTQyxjQUFjLFNBQVMyRSxVQUFZLEdBRzVDckIsUUFBUUMsSUFBSThELEdBQ1pyRSxFQUFhcUUsR0FHYnRILFNBQVNDLGNBQWMsZUFBZTRILE1BQVEsR0Y2QjFDQyxNR25DUkMsR0FDQTlFLEVBQWEsY0NQRSxXQUVYLE1BQU0rRSxFQUFTaEksU0FBU1csY0FBYyxVQUNoQ3NILEVBQU1qSSxTQUFTVyxjQUFjLEtBQzdCdUgsRUFBZ0JsSSxTQUFTVyxjQUFjLE9BQ3ZDd0gsRUFBU25JLFNBQVNXLGNBQWMsS0FDaEN5SCxFQUFVcEksU0FBU1csY0FBYyxLQUV2Q3NILEVBQUk3RCxVQUFZLG1CQUNoQjZELEVBQUlJLEtBQU8sa0NBQ1hKLEVBQUluSSxPQUFPLFNBRVhxSSxFQUFPdkQsVUFBWSxzQ0FDbkJ1RCxFQUFPRSxLQUFPLHNDQUNkRixFQUFPckksT0FBUyxTQUVoQnNJLEVBQVF4RCxVQUFZLHVDQUNwQndELEVBQVFDLEtBQU8sMkRBQ2ZELEVBQVF0SSxPQUFTLFNBRWpCb0ksRUFBYzlDLE9BQU8rQyxHQUNyQkQsRUFBYzlDLE9BQU9nRCxHQUNyQkYsRUFBY3hDLFVBQVksZ0JBRTFCc0MsRUFBTzVDLE9BQU82QyxHQUNkRCxFQUFPNUMsT0FBTzhDLEdBRWRsSSxTQUFTQyxjQUFjLFdBQVdtRixPQUFPNEMsR0RuQjdDTSxJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9wLXdlYXRoZXItYXBwLy4vc3JjL3Nhc3MvbWFpbi5zY3NzIiwid2VicGFjazovL3RvcC13ZWF0aGVyLWFwcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG9wLXdlYXRoZXItYXBwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdG9wLXdlYXRoZXItYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvcC13ZWF0aGVyLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdG9wLXdlYXRoZXItYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3RvcC13ZWF0aGVyLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b3Atd2VhdGhlci1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90b3Atd2VhdGhlci1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90b3Atd2VhdGhlci1hcHAvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9wLXdlYXRoZXItYXBwL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvcC13ZWF0aGVyLWFwcC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdG9wLXdlYXRoZXItYXBwL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9wLXdlYXRoZXItYXBwLy4vc3JjL3Nhc3MvbWFpbi5zY3NzPzZhMTciLCJ3ZWJwYWNrOi8vdG9wLXdlYXRoZXItYXBwLy4vc3JjL3JldHJpZXZlRGF0YS5qcyIsIndlYnBhY2s6Ly90b3Atd2VhdGhlci1hcHAvLi9zcmMvcHJvY2Vzc0RhdGEuanMiLCJ3ZWJwYWNrOi8vdG9wLXdlYXRoZXItYXBwLy4vc3JjL2Rpc3BsYXlNYWluV2VhdGhlci5qcyIsIndlYnBhY2s6Ly90b3Atd2VhdGhlci1hcHAvLi9zcmMvbWFuYWdlRGlzcGxheS5qcyIsIndlYnBhY2s6Ly90b3Atd2VhdGhlci1hcHAvLi9zcmMvZnV0dXJlV2VhdGhlckRpc3BsYXkuanMiLCJ3ZWJwYWNrOi8vdG9wLXdlYXRoZXItYXBwLy4vc3JjLzQwNEVycm9yLmpzIiwid2VicGFjazovL3RvcC13ZWF0aGVyLWFwcC8uL3NyYy9oZWFkZXIuanMiLCJ3ZWJwYWNrOi8vdG9wLXdlYXRoZXItYXBwLy4vc3JjL3RvZ2dsZS5qcyIsIndlYnBhY2s6Ly90b3Atd2VhdGhlci1hcHAvLi9zcmMvaGFuZGxlU2VhcmNoLmpzIiwid2VicGFjazovL3RvcC13ZWF0aGVyLWFwcC8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b3Atd2VhdGhlci1hcHAvLi9zcmMvZm9vdGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIkBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9SW50ZXI6d2dodEA0MDA7NjAwOzgwMDs5MDAmZGlzcGxheT1zd2FwKTtcIl0pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiKnttYXJnaW46MDtwYWRkaW5nOjA7LW1vei1ib3gtc2l6aW5nOmJvcmRlci1ib3g7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94fWJvZHl7Y29sb3I6IzVmNmY3NztiYWNrZ3JvdW5kOiNjOGQ0ZGE7Zm9udC1mYW1pbHk6XFxcIkludGVyXFxcIixzYW5zLXNlcmlmfSNyb290e2NvbG9yOiM1ZjZmNzc7bWluLWhlaWdodDoxMDB2aDtoZWlnaHQ6MTAwJTt3aWR0aDo4MCU7bWFyZ2luOjAgYXV0bztkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVufWhlYWRlcixmb290ZXJ7bWluLWhlaWdodDoxMHZoO2JhY2tncm91bmQtY29sb3I6I2M4ZDRkYTtkaXNwbGF5OmdyaWQ7Z2FwOjI1cHg7YWxpZ24taXRlbXM6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7cGFkZGluZzoxMHB4IDI1cHh9QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhlbSl7aGVhZGVyLGZvb3RlcntkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47YWxpZ24taXRlbXM6Y2VudGVyfX1oZWFkZXIgLnNlYXJjaENvbnRhaW5lcixoZWFkZXIgLmxpbmtDb250YWluZXIsZm9vdGVyIC5zZWFyY2hDb250YWluZXIsZm9vdGVyIC5saW5rQ29udGFpbmVye2Rpc3BsYXk6ZmxleDtnYXA6MTBweDthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcn1oZWFkZXIgLnNlYXJjaENvbnRhaW5lciBpLGhlYWRlciAubGlua0NvbnRhaW5lciBpLGZvb3RlciAuc2VhcmNoQ29udGFpbmVyIGksZm9vdGVyIC5saW5rQ29udGFpbmVyIGl7Y3Vyc29yOnBvaW50ZXJ9aGVhZGVyIC5zZWFyY2hDb250YWluZXIgaTpob3ZlcixoZWFkZXIgLmxpbmtDb250YWluZXIgaTpob3Zlcixmb290ZXIgLnNlYXJjaENvbnRhaW5lciBpOmhvdmVyLGZvb3RlciAubGlua0NvbnRhaW5lciBpOmhvdmVye2NvbG9yOiNmZmZ9aGVhZGVyIGE6aG92ZXIsZm9vdGVyIGE6aG92ZXJ7Y29sb3I6I2ZmZn1he2NvbG9yOmluaGVyaXQ7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Zm9udC1zaXplOjEuNWVtfWgxe3RleHQtYWxpZ246Y2VudGVyfWZvcm0gI3NlYXJjaC1pY29ue2JhY2tncm91bmQ6bm9uZTtib3JkZXI6bm9uZTtvdXRsaW5lOm5vbmU7Y29sb3I6I2ZmZjtjdXJzb3I6cG9pbnRlcn1mb3JtICNzZWFyY2gtaWNvbjpob3Zlcntjb2xvcjojNWY2Zjc3fS5tYWluLWNvbnRhaW5lcntkaXNwbGF5OmdyaWQ7Z2FwOjIwcHh9I21haW4td2VhdGhlciwjZnV0dXJlLXdlYXRoZXIsI2Vycm9yLWNhcmR7cGFkZGluZzoyNXB4O2Rpc3BsYXk6Z3JpZDthbGlnbi1pdGVtczpjZW50ZXI7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JveC1zaGFkb3c6MCA0cHggNHB4IDAgcmdiYSgwLDAsMCwuMjUpO2JvcmRlci1yYWRpdXM6NTBweDtnYXA6NXB4fSNtYWluLXdlYXRoZXJ7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOjFmcjtqdXN0aWZ5LWl0ZW1zOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7Z3JpZC10ZW1wbGF0ZS1hcmVhczpcXFwidGVtcFxcXCIgXFxcInRlbXBcXFwiIFxcXCJsb2NcXFwiIFxcXCJpbWdcXFwiIFxcXCJkYXRlVGltZVxcXCIgXFxcIndlYXRoZXJcXFwiIFxcXCJ3aW5kXFxcIiBcXFwicHJlc3N1cmVcXFwifSNtYWluLXdlYXRoZXIgI3RlbXB7Z3JpZC1hcmVhOnRlbXA7Zm9udC1zaXplOjRlbTtmb250LXdlaWdodDpib2xkO3RleHQtYWxpZ246Y2VudGVyfSNtYWluLXdlYXRoZXIgI2xvY2F0aW9ue2dyaWQtYXJlYTpsb2M7Zm9udC1zaXplOjNlbTt0ZXh0LWFsaWduOmNlbnRlcn0jbWFpbi13ZWF0aGVyICNkYXRlLXRpbWV7Z3JpZC1hcmVhOmRhdGVUaW1lO2ZvbnQtd2VpZ2h0OmJvbGR9I21haW4td2VhdGhlciBpbWd7Z3JpZC1hcmVhOmltZ30jbWFpbi13ZWF0aGVyICN3ZWF0aGVye2dyaWQtYXJlYTp3ZWF0aGVyfSNtYWluLXdlYXRoZXIgI3dpbmR7Z3JpZC1hcmVhOndpbmR9I21haW4td2VhdGhlciAjcHJlc3N1cmV7Z3JpZC1hcmVhOnByZXNzdXJlfSNmdXR1cmUtd2VhdGhlcntncmlkLXRlbXBsYXRlLWNvbHVtbnM6cmVwZWF0KDEsIDFmcil9I2Z1dHVyZS13ZWF0aGVyIC5mdXR1cmUtY2FyZHtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmdyaWQ7YWxpZ24taXRlbXM6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXJ9I2Z1dHVyZS13ZWF0aGVyIC5mdXR1cmUtY2FyZCAudGVtcHtmb250LXNpemU6MS4yZW07Zm9udC13ZWlnaHQ6Ym9sZH0jZnV0dXJlLXdlYXRoZXIgLmZ1dHVyZS1jYXJkIHB7dGV4dC1hbGlnbjpjZW50ZXJ9I2Z1dHVyZS13ZWF0aGVyIC5mdXR1cmUtY2FyZDo6YWZ0ZXJ7aGVpZ2h0OjNweDt3aWR0aDoxMDAlO2JvdHRvbTotNXB4O2NvbnRlbnQ6XFxcIlxcXCI7cG9zaXRpb246YWJzb2x1dGU7YmFja2dyb3VuZDojYzhkNGRhfSNmdXR1cmUtd2VhdGhlciA6bGFzdC1jaGlsZDo6YWZ0ZXJ7aGVpZ2h0OjB9I2Vycm9yLWNhcmR7YWxpZ24taXRlbXM6Y2VudGVyO2p1c3RpZnktaXRlbXM6Y2VudGVyfSNlcnJvci1jYXJkICNlcnJvci10aXRsZXt0ZXh0LWFsaWduOmNlbnRlcn0uc3dpdGNoe3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3dpZHRoOjYwcHg7aGVpZ2h0OjM0cHh9LnN3aXRjaCBpbnB1dHtvcGFjaXR5OjA7d2lkdGg6MDtoZWlnaHQ6MH0uc2xpZGVye3Bvc2l0aW9uOmFic29sdXRlO2N1cnNvcjpwb2ludGVyO3RvcDowO2xlZnQ6MDtyaWdodDowO2JvdHRvbTowO2JhY2tncm91bmQtY29sb3I6IzVmNmY3Nzstd2Via2l0LXRyYW5zaXRpb246LjRzO3RyYW5zaXRpb246LjRzfS5zbGlkZXI6YmVmb3Jle3Bvc2l0aW9uOmFic29sdXRlO2NvbnRlbnQ6XFxcIkNcXFwiO2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjtoZWlnaHQ6MjZweDt3aWR0aDoyNnB4O2xlZnQ6NHB4O2JvdHRvbTo0cHg7YmFja2dyb3VuZC1jb2xvcjojZjc4NzYzOy13ZWJraXQtdHJhbnNpdGlvbjouNHM7dHJhbnNpdGlvbjouNHN9aW5wdXQ6Y2hlY2tlZCsuc2xpZGVye2JhY2tncm91bmQtY29sb3I6IzVmNmY3N31pbnB1dDpmb2N1cysuc2xpZGVye2JveC1zaGFkb3c6MCAwIDFweCAjNWY2Zjc3fWlucHV0OmNoZWNrZWQrLnNsaWRlcjpiZWZvcmV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlWCgyNnB4KTstbXMtdHJhbnNmb3JtOnRyYW5zbGF0ZVgoMjZweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoMjZweCk7Y29udGVudDpcXFwiRlxcXCI7YmFja2dyb3VuZC1jb2xvcjojNjNjYmY3fS5zbGlkZXIucm91bmR7Ym9yZGVyLXJhZGl1czozNHB4fS5zbGlkZXIucm91bmQ6YmVmb3Jle2JvcmRlci1yYWRpdXM6NTAlfUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4ZW0peyNtYWluLXdlYXRoZXIsI2Z1dHVyZS13ZWF0aGVye2JvcmRlci1yYWRpdXM6MTAwcHh9I21haW4td2VhdGhlcntncmlkLXRlbXBsYXRlLWNvbHVtbnM6LjZmciAuMmZyIC4yZnI7Z3JpZC10ZW1wbGF0ZS1hcmVhczpcXFwidGVtcCAgZGF0ZVRpbWUgLlxcXCIgXFxcInRlbXAgIHdlYXRoZXIgaW1nXFxcIiBcXFwibG9jICB3aW5kIGltZ1xcXCIgXFxcImxvYyAgcHJlc3N1cmUgLlxcXCJ9I21haW4td2VhdGhlciAjdGVtcHtmb250LXNpemU6NGVtfSNtYWluLXdlYXRoZXIgI2xvY2F0aW9ue2ZvbnQtc2l6ZTozZW19I2Z1dHVyZS13ZWF0aGVye2dyaWQtdGVtcGxhdGUtY29sdW1uczpyZXBlYXQoNiwgMWZyKX0jZnV0dXJlLXdlYXRoZXIgLmZ1dHVyZS1jYXJke3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6Z3JpZDthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcn0jZnV0dXJlLXdlYXRoZXIgLmZ1dHVyZS1jYXJkIC50ZW1we2ZvbnQtc2l6ZToxLjJlbTtmb250LXdlaWdodDpib2xkfSNmdXR1cmUtd2VhdGhlciAuZnV0dXJlLWNhcmQgcHt0ZXh0LWFsaWduOmNlbnRlcn0jZnV0dXJlLXdlYXRoZXIgLmZ1dHVyZS1jYXJkOjphZnRlcntoZWlnaHQ6MTAwJTt3aWR0aDozcHg7cmlnaHQ6MDtjb250ZW50OlxcXCJcXFwiO3Bvc2l0aW9uOmFic29sdXRlO2JhY2tncm91bmQ6I2M4ZDRkYX0jZnV0dXJlLXdlYXRoZXIgOmxhc3QtY2hpbGQ6OmFmdGVye2hlaWdodDowfX1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc2Fzcy9tYWluLnNjc3NcIixcIndlYnBhY2s6Ly8uL3NyYy9zYXNzL3ZhcmlhYmxlcy5zY3NzXCIsXCJ3ZWJwYWNrOi8vLi9zcmMvc2Fzcy9taXhpbnMuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFJQSxFQUNJLFFBQUEsQ0FDQSxTQUFBLENBQ0EsMEJBQUEsQ0FDQSw2QkFBQSxDQUNBLHFCQUFBLENBR0osS0FDSSxhQ1RPLENEVVAsa0JDYlUsQ0RjViw4QkFBQSxDQUdKLE1BQ0ksYUNmTyxDRGdCUCxnQkFBQSxDQUNBLFdBQUEsQ0FDQSxTQUFBLENBQ0EsYUFBQSxDQUNBLFlBQUEsQ0FDQSxxQkFBQSxDQUNBLDZCQUFBLENBSUosY0FDSSxlQUFBLENBQ0Esd0JDL0JVLENEZ0NWLFlBQUEsQ0FDQSxRQUFBLENBQ0Esa0JBQUEsQ0FDQSxzQkFBQSxDQUNBLGlCQUFBLENFbENJLG9DRjJCUixjQVVRLFlBQUEsQ0FDQSw2QkFBQSxDQUNBLGtCQUFBLENBQUEsQ0FHSiw0RkFDSSxZQUFBLENBQ0EsUUFBQSxDQUNBLGtCQUFBLENBQ0Esc0JBQUEsQ0FFQSxvR0FDSSxjQUFBLENBR0osNEhBQ0ksVUN4REYsQ0Q0RE4sOEJBQ0ksVUM3REUsQ0RrRVYsRUFDSSxhQUFBLENBQ0Esb0JBQUEsQ0FDQSxlQUFBLENBR0osR0FDSSxpQkFBQSxDQUlBLGtCQUNJLGVBQUEsQ0FDQSxXQUFBLENBQ0EsWUFBQSxDQUNBLFVDakZFLENEa0ZGLGNBQUEsQ0FFQSx3QkFDSSxhQ2pGRCxDRHVGWCxnQkFDSSxZQUFBLENBQ0EsUUFBQSxDQUtKLDBDQUNJLFlBQUEsQ0FDQSxZQUFBLENBQ0Esa0JBQUEsQ0FDQSxxQkN0R00sQ0R1R04sc0NBQUEsQ0FDQSxrQkFBQSxDQUNBLE9BQUEsQ0FHSixjQUNJLHlCQUFBLENBQ0Esb0JBQUEsQ0FDQSxrQkFBQSxDQUNBLG9GQUFBLENBVUEsb0JBQ0ksY0FBQSxDQUNBLGFBQUEsQ0FDQSxnQkFBQSxDQUNBLGlCQUFBLENBRUosd0JBQ0ksYUFBQSxDQUNBLGFBQUEsQ0FDQSxpQkFBQSxDQUVKLHlCQUNJLGtCQUFBLENBQ0EsZ0JBQUEsQ0FHSixrQkFDSSxhQUFBLENBRUosdUJBQ0ksaUJBQUEsQ0FFSixvQkFDSSxjQUFBLENBRUosd0JBQ0ksa0JBQUEsQ0FPUixnQkFDSSxvQ0FBQSxDQUVBLDZCQUNJLGlCQUFBLENBQ0EsWUFBQSxDQUNBLGtCQUFBLENBQ0Esc0JBQUEsQ0FFQSxtQ0FDSSxlQUFBLENBQ0EsZ0JBQUEsQ0FHSiwrQkFDSSxpQkFBQSxDQUdKLG9DQUNJLFVBQUEsQ0FDQSxVQUFBLENBQ0EsV0FBQSxDQUNBLFVBQUEsQ0FDQSxpQkFBQSxDQUNBLGtCQ2xMRSxDRHVMTixtQ0FDSSxRQUFBLENBTVosWUFDSSxrQkFBQSxDQUNBLG9CQUFBLENBRUEseUJBQ0ksaUJBQUEsQ0FLUixRQUNJLGlCQUFBLENBQ0Esb0JBQUEsQ0FDQSxVQUFBLENBQ0EsV0FBQSxDQUlGLGNBQ0UsU0FBQSxDQUNBLE9BQUEsQ0FDQSxRQUFBLENBSUYsUUFDRSxpQkFBQSxDQUNBLGNBQUEsQ0FDQSxLQUFBLENBQ0EsTUFBQSxDQUNBLE9BQUEsQ0FDQSxRQUFBLENBQ0Esd0JDM05PLENENE5QLHNCQUFBLENBQ0EsY0FBQSxDQUVBLGVBQ0ksaUJBQUEsQ0FDQSxXQUFBLENBQ0EsWUFBQSxDQUNBLGtCQUFBLENBQ0Esc0JBQUEsQ0FDQSxXQUFBLENBQ0EsVUFBQSxDQUNBLFFBQUEsQ0FDQSxVQUFBLENBQ0Esd0JDM09RLENENE9SLHNCQUFBLENBQ0EsY0FBQSxDQUtOLHNCQUNFLHdCQ2pQTyxDRG9QVCxvQkFDRSwwQkFBQSxDQUdGLDZCQUNFLGtDQUFBLENBQ0EsOEJBQUEsQ0FDQSwwQkFBQSxDQUNBLFdBQUEsQ0FDQSx3QkM5UGUsQ0RrUWpCLGNBQ0Usa0JBQUEsQ0FHRixxQkFDRSxpQkFBQSxDQUlGLG9DQUVFLDhCQUNJLG1CQUFBLENBR0osY0FDSSxvQ0FBQSxDQUNBLDRGQUFBLENBTUEsb0JBQ0ksYUFBQSxDQUdKLHdCQUNJLGFBQUEsQ0FJUixnQkFDSSxvQ0FBQSxDQUVBLDZCQUNJLGlCQUFBLENBQ0EsWUFBQSxDQUNBLGtCQUFBLENBQ0Esc0JBQUEsQ0FFQSxtQ0FDSSxlQUFBLENBQ0EsZ0JBQUEsQ0FHSiwrQkFDSSxpQkFBQSxDQUdKLG9DQUNJLFdBQUEsQ0FDQSxTQUFBLENBQ0EsT0FBQSxDQUNBLFVBQUEsQ0FDQSxpQkFBQSxDQUNBLGtCQzVURixDRGlVRixtQ0FDSSxRQUFBLENBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9SW50ZXI6d2dodEA0MDA7NjAwOzgwMDs5MDAmZGlzcGxheT1zd2FwJyk7XFxuQGltcG9ydCAnLi92YXJpYWJsZXMuc2Nzcyc7IFxcbkBpbXBvcnQgJy4vbWl4aW5zLnNjc3MnO1xcblxcbioge1xcbiAgICBtYXJnaW46IDA7IFxcbiAgICBwYWRkaW5nOiAwOyBcXG4gICAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbmJvZHkge1xcbiAgICBjb2xvcjogJHRleHQtY29sO1xcbiAgICBiYWNrZ3JvdW5kOiAkcHJpbWFyeS1jb2w7XFxuICAgIGZvbnQtZmFtaWx5OiAnSW50ZXInLCBzYW5zLXNlcmlmO1xcbn1cXG5cXG4jcm9vdCB7XFxuICAgIGNvbG9yOiAkdGV4dC1jb2w7XFxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xcbiAgICBoZWlnaHQ6IDEwMCU7IFxcbiAgICB3aWR0aDogODAlOyBcXG4gICAgbWFyZ2luOiAwIGF1dG87XFxuICAgIGRpc3BsYXk6IGZsZXg7IFxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuXFxufVxcblxcbmhlYWRlciwgZm9vdGVyIHtcXG4gICAgbWluLWhlaWdodDogMTB2aDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHByaW1hcnktY29sO1xcbiAgICBkaXNwbGF5OiBncmlkOyBcXG4gICAgZ2FwOiAyNXB4OyBcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIHBhZGRpbmc6IDEwcHggMjVweDsgXFxuXFxuICAgIEBpbmNsdWRlIHJlc2l6ZSgndGFibGV0Jykge1xcbiAgICAgICAgZGlzcGxheTogZmxleDsgXFxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICB9XFxuXFxuICAgIC5zZWFyY2hDb250YWluZXIsIC5saW5rQ29udGFpbmVyIHtcXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7IFxcbiAgICAgICAgZ2FwOiAxMHB4OyBcXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG5cXG4gICAgICAgIGkge1xcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgICAgIH1cXG5cXG4gICAgICAgIGk6aG92ZXIge1xcbiAgICAgICAgICAgIGNvbG9yOiAkY2FyZC1iZzsgXFxuICAgICAgICB9XFxuICAgIH1cXG5cXG4gICAgYTpob3ZlciB7XFxuICAgICAgICBjb2xvcjogJGNhcmQtYmc7IFxcbiAgICB9XFxufVxcblxcblxcbmEge1xcbiAgICBjb2xvcjogaW5oZXJpdDtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcbiAgICBmb250LXNpemU6IDEuNWVtO1xcbn1cXG5cXG5oMSB7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuXFxuZm9ybSB7XFxuICAgICNzZWFyY2gtaWNvbiB7XFxuICAgICAgICBiYWNrZ3JvdW5kOiBub25lO1xcbiAgICAgICAgYm9yZGVyOiBub25lO1xcbiAgICAgICAgb3V0bGluZTogbm9uZTtcXG4gICAgICAgIGNvbG9yOiAkY2FyZC1iZzsgXFxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XFxuXFxuICAgICAgICAmOmhvdmVyIHtcXG4gICAgICAgICAgICBjb2xvcjokdGV4dC1jb2w7XFxuICAgICAgICB9XFxuICAgIH1cXG59XFxuXFxuXFxuLm1haW4tY29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ2FwOiAyMHB4O1xcblxcbn1cXG5cXG5cXG4jbWFpbi13ZWF0aGVyLCAjZnV0dXJlLXdlYXRoZXIsICNlcnJvci1jYXJkIHtcXG4gICAgcGFkZGluZzogMjVweDsgXFxuICAgIGRpc3BsYXk6IGdyaWQ7IFxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY2FyZC1iZzsgXFxuICAgIGJveC1zaGFkb3c6IDAgNHB4IDRweCAwIHJnYmEoMCwwLDAsMC4yNSk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XFxuICAgIGdhcDogNXB4O1xcbn1cXG5cXG4jbWFpbi13ZWF0aGVyIHtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XFxuICAgIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXFxcInRlbXBcXFwiXFxuICAgICAgICBcXFwidGVtcFxcXCJcXG4gICAgICAgIFxcXCJsb2NcXFwiXFxuICAgICAgICBcXFwiaW1nXFxcIlxcbiAgICAgICAgXFxcImRhdGVUaW1lXFxcIlxcbiAgICAgICAgXFxcIndlYXRoZXJcXFwiXFxuICAgICAgICBcXFwid2luZFxcXCJcXG4gICAgICAgIFxcXCJwcmVzc3VyZVxcXCJcXG4gICAgO1xcblxcbiAgICAjdGVtcCB7XFxuICAgICAgICBncmlkLWFyZWE6IHRlbXA7IFxcbiAgICAgICAgZm9udC1zaXplOiA0ZW07XFxuICAgICAgICBmb250LXdlaWdodDogYm9sZDsgXFxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIH1cXG4gICAgI2xvY2F0aW9uIHtcXG4gICAgICAgIGdyaWQtYXJlYTogbG9jOyBcXG4gICAgICAgIGZvbnQtc2l6ZTogM2VtO1xcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICB9XFxuICAgICNkYXRlLXRpbWUge1xcbiAgICAgICAgZ3JpZC1hcmVhOiBkYXRlVGltZTsgXFxuICAgICAgICBmb250LXdlaWdodDogYm9sZDsgXFxuXFxuICAgIH1cXG4gICAgaW1nIHtcXG4gICAgICAgIGdyaWQtYXJlYTogaW1nOyBcXG4gICAgfVxcbiAgICAjd2VhdGhlciB7XFxuICAgICAgICBncmlkLWFyZWE6IHdlYXRoZXI7XFxuICAgIH1cXG4gICAgI3dpbmQge1xcbiAgICAgICAgZ3JpZC1hcmVhOiB3aW5kO1xcbiAgICB9XFxuICAgICNwcmVzc3VyZSB7XFxuICAgICAgICBncmlkLWFyZWE6IHByZXNzdXJlO1xcbiAgICB9XFxufVxcblxcbi8vIGZ1dHVyZSB3ZWF0aGVyXFxuXFxuXFxuI2Z1dHVyZS13ZWF0aGVyIHtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMSwgMWZyKTtcXG5cXG4gICAgLmZ1dHVyZS1jYXJkIHtcXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7IFxcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcblxcbiAgICAgICAgLnRlbXAge1xcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4yZW07IFxcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgICAgICAgfVxcblxcbiAgICAgICAgcCB7XFxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICAgICAgfVxcblxcbiAgICAgICAgJjo6YWZ0ZXIge1xcbiAgICAgICAgICAgIGhlaWdodDogM3B4OyBcXG4gICAgICAgICAgICB3aWR0aDogMTAwJTsgXFxuICAgICAgICAgICAgYm90dG9tOiAtNXB4OyBcXG4gICAgICAgICAgICBjb250ZW50OiAnJzsgXFxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOyBcXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAkcHJpbWFyeS1jb2w7XFxuICAgICAgICB9XFxuICAgIH1cXG5cXG4gICAgOmxhc3QtY2hpbGQge1xcbiAgICAgICAgJjo6YWZ0ZXIge1xcbiAgICAgICAgICAgIGhlaWdodDogMDsgXFxuICAgICAgICB9XFxuICAgIH1cXG59XFxuXFxuLy8gNDA0IGJveFxcbiNlcnJvci1jYXJkIHtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1pdGVtczogY2VudGVyO1xcblxcbiAgICAjZXJyb3ItdGl0bGUge1xcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICB9XFxufVxcblxcbi8qIFRoZSBzd2l0Y2ggLSB0aGUgYm94IGFyb3VuZCB0aGUgc2xpZGVyICovXFxuLnN3aXRjaCB7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgICB3aWR0aDogNjBweDtcXG4gICAgaGVpZ2h0OiAzNHB4O1xcbiAgfVxcbiAgXFxuICAvKiBIaWRlIGRlZmF1bHQgSFRNTCBjaGVja2JveCAqL1xcbiAgLnN3aXRjaCBpbnB1dCB7XFxuICAgIG9wYWNpdHk6IDA7XFxuICAgIHdpZHRoOiAwO1xcbiAgICBoZWlnaHQ6IDA7XFxuICB9XFxuICBcXG4gIC8qIFRoZSBzbGlkZXIgKi9cXG4gIC5zbGlkZXIge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgdG9wOiAwO1xcbiAgICBsZWZ0OiAwO1xcbiAgICByaWdodDogMDtcXG4gICAgYm90dG9tOiAwO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGV4dC1jb2w7XFxuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogLjRzO1xcbiAgICB0cmFuc2l0aW9uOiAuNHM7XFxuXFxuICAgICY6YmVmb3JlIHtcXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgICAgIGNvbnRlbnQ6IFxcXCJDXFxcIjtcXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7IFxcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICAgICAgaGVpZ2h0OiAyNnB4O1xcbiAgICAgICAgd2lkdGg6IDI2cHg7XFxuICAgICAgICBsZWZ0OiA0cHg7XFxuICAgICAgICBib3R0b206IDRweDtcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktY29sO1xcbiAgICAgICAgLXdlYmtpdC10cmFuc2l0aW9uOiAuNHM7XFxuICAgICAgICB0cmFuc2l0aW9uOiAuNHM7XFxuICAgICAgfVxcbiAgfVxcbiAgXFxuICBcXG4gIGlucHV0OmNoZWNrZWQgKyAuc2xpZGVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHRleHQtY29sOztcXG4gIH1cXG4gIFxcbiAgaW5wdXQ6Zm9jdXMgKyAuc2xpZGVyIHtcXG4gICAgYm94LXNoYWRvdzogMCAwIDFweCAkdGV4dC1jb2w7O1xcbiAgfVxcbiAgXFxuICBpbnB1dDpjaGVja2VkICsgLnNsaWRlcjpiZWZvcmUge1xcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNnB4KTtcXG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNnB4KTtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI2cHgpO1xcbiAgICBjb250ZW50OiBcXFwiRlxcXCI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICR0b2dnbGUtc2Vjb25kYXJ5O1xcbiAgfVxcbiAgXFxuICAvKiBSb3VuZGVkIHNsaWRlcnMgKi9cXG4gIC5zbGlkZXIucm91bmQge1xcbiAgICBib3JkZXItcmFkaXVzOiAzNHB4O1xcbiAgfVxcbiAgXFxuICAuc2xpZGVyLnJvdW5kOmJlZm9yZSB7XFxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIH1cXG5cXG5cXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4ZW0gKXtcXG5cXG4gICAgI21haW4td2VhdGhlciwgI2Z1dHVyZS13ZWF0aGVyIHtcXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMHB4O1xcbiAgICB9XFxuICAgIFxcbiAgICAjbWFpbi13ZWF0aGVyIHtcXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMC42ZnIgLjJmciAwLjJmcjtcXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFxcXCJ0ZW1wICBkYXRlVGltZSAuXFxcIlxcbiAgICAgICAgXFxcInRlbXAgIHdlYXRoZXIgaW1nXFxcIlxcbiAgICAgICAgXFxcImxvYyAgd2luZCBpbWdcXFwiXFxuICAgICAgICBcXFwibG9jICBwcmVzc3VyZSAuXFxcIlxcbiAgICA7XFxuXFxuICAgICAgICAjdGVtcCB7XFxuICAgICAgICAgICAgZm9udC1zaXplOiA0ZW07XFxuICAgICAgICB9XFxuXFxuICAgICAgICAjbG9jYXRpb24ge1xcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogM2VtO1xcbiAgICAgICAgfVxcbiAgICB9XFxuXFxuICAgICNmdXR1cmUtd2VhdGhlciB7XFxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg2LCAxZnIpOyBcXG5cXG4gICAgICAgIC5mdXR1cmUtY2FyZCB7XFxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7IFxcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIFxcbiAgICAgICAgICAgIC50ZW1wIHtcXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjJlbTsgXFxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgICAgICAgICAgIH1cXG4gICAgXFxuICAgICAgICAgICAgcCB7XFxuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgICAgICAgICB9XFxuICAgIFxcbiAgICAgICAgICAgICY6OmFmdGVyIHtcXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlOyBcXG4gICAgICAgICAgICAgICAgd2lkdGg6IDNweDsgXFxuICAgICAgICAgICAgICAgIHJpZ2h0OiAwOyBcXG4gICAgICAgICAgICAgICAgY29udGVudDogJyc7IFxcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7IFxcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAkcHJpbWFyeS1jb2w7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICBcXG4gICAgICAgIDpsYXN0LWNoaWxkIHtcXG4gICAgICAgICAgICAmOjphZnRlciB7XFxuICAgICAgICAgICAgICAgIGhlaWdodDogMDsgXFxuICAgICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICB9XFxuICB9XCIsXCIkY2FyZC1iZzogd2hpdGU7IFxcbiRwcmltYXJ5LWNvbDogI0M4RDREQTsgXFxuJHNlY29uZGFyeS1jb2w6ICNGNzg3NjM7IFxcbiR0b2dnbGUtc2Vjb25kYXJ5OiAjNjNDQkY3O1xcbiR0ZXh0LWNvbDogIzVGNkY3NztcIixcIkBtaXhpbiByZXNpemUoJGJwKSB7XFxuXFxuICAgIEBpZiAkYnAgPT0gJ3RhYmxldCcge1xcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhlbSkge1xcbiAgICAgICAgICAgIEBjb250ZW50O1xcbiAgICAgICAgfVxcbiAgICB9XFxuICAgIEBpZiAkYnAgPT0gJ2xhcHRvcCcge1xcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjRlbSkge1xcbiAgICAgICAgICAgIEBjb250ZW50O1xcbiAgICAgICAgfVxcbiAgICB9XFxuICAgIEBpZiAkYnAgPT0gJ2Rlc2t0b3AnIHtcXG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDkwZW0pIHtcXG4gICAgICAgICAgICBAY29udGVudDtcXG4gICAgICAgIH1cXG4gICAgfVxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4uc2Nzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4uc2Nzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBwcm9jZXNzRGF0YSBmcm9tIFwiLi9wcm9jZXNzRGF0YVwiO1xuaW1wb3J0IF80MDRQYWdlIGZyb20gXCIuLzQwNEVycm9yXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIHJldHJpZXZlRGF0YShsb2NhdGlvbikge1xuXG5cbiAgICAvLyBhZGQgbG9hZGluZyBzY3JlZW47XG4gICAgY29uc3QgYXBpS2V5ID0gJ2NiNTYxNTM1ZDQzODJiZDk1ZTBmMmFiOTY1OTc0ZTRlJ1xuICAgIC8vIGNvbnN0IHVybCA9IGBodHRwczovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvd2VhdGhlcj9xPSR7bG9jYXRpb259JmFwcGlkPSR7YXBpS2V5fWA7IC8vY3VycmVudFxuICAgIGNvbnN0IHVybCA9IGBodHRwczovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvZm9yZWNhc3Q/cT0ke2xvY2F0aW9ufSZhcHBpZD0ke2FwaUtleX1gOyAvLyA1ZGF5LzMgaG91clxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsKTsgXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7IFxuICAgICAgICBwcm9jZXNzRGF0YShkYXRhKTtcblxuICAgIH0gY2F0Y2goZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgIC8vIDQwNCBwYWdlXG4gICAgICAgIF80MDRQYWdlKCk7IFxuICAgIH1cbiAgICBcbn0iLCJpbXBvcnQgZGlzcGxheU1haW5XZWF0aGVyIGZyb20gXCIuL2Rpc3BsYXlNYWluV2VhdGhlclwiO1xuaW1wb3J0IG1hbmFnZURpc3BsYXkgZnJvbSBcIi4vbWFuYWdlRGlzcGxheVwiO1xuaW1wb3J0IGZ1dHVyZVdlYXRoZXJEaXNwbGF5IGZyb20gXCIuL2Z1dHVyZVdlYXRoZXJEaXNwbGF5XCI7XG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcHJvY2Vzc0RhdGEoZGF0YSkge1xuICAgIGNvbnN0IHdlYXRoZXIgPSBkYXRhLmxpc3Q7IFxuICAgIGNvbnNvbGUubG9nKFwicHJvY2VzcyBkYXRhXCIpXG4gICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgY29uc3Qgd2VhdGhlck5vdyA9IHdlYXRoZXJbMF07IFxuICAgIGNvbnN0IG1haW5EaXNwbGF5ID0gZGlzcGxheU1haW5XZWF0aGVyKHdlYXRoZXJOb3csIGAke2RhdGEuY2l0eS5uYW1lfSwgJHtkYXRhLmNpdHkuY291bnRyeX1gKTtcbiAgICBjb25zdCBmdXR1cmVEaXNwbGF5ID0gZnV0dXJlV2VhdGhlckRpc3BsYXkod2VhdGhlciwgMCwgNSk7XG4gICAgLy8gZnV0dXJlRGlzcGxheS50ZXh0Q29udGVudCA9ICdoZWxsb3cnO1xuXG4gICAgbWFuYWdlRGlzcGxheShtYWluRGlzcGxheSwgZnV0dXJlRGlzcGxheSk7IFxuICAgIC8vIGNvbnN0IGltYWdlVXJsID0gYGh0dHBzOi8vb3BlbndlYXRoZXJtYXAub3JnL2ltZy93bi8ke2ljb259QDJ4LnBuZ2A7XG59IiwiaW1wb3J0IHRvZ2dsZSBmcm9tIFwiLi90b2dnbGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGlzcGxheU1haW5XZWF0aGVyKG9iaiwgbG9jYXRpb24pIHtcblxuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOyBcbiAgICBjb25zdCBsb2MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7IFxuICAgIGNvbnN0IGltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpOyBcbiAgICBjb25zdCBkYXRlVGltZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICBjb25zdCB0ZW1wID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgIGNvbnN0IHdlYXRoZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgY29uc3QgcHJlc3N1cmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgY29uc3Qgd2luZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcblxuICAgIGxldCBkYXRlID0gbmV3IERhdGUob2JqLmR0X3R4dCk7IFxuXG4gICAgbG9jLmlubmVyVGV4dCA9IGxvY2F0aW9uOyBcbiAgICBkYXRlVGltZS5pbm5lclRleHQgPSBuZXcgSW50bC5EYXRlVGltZUZvcm1hdCgnZW4tR0InLCB7d2Vla2RheTogXCJzaG9ydFwifSkuZm9ybWF0KGRhdGUpICsgXCIgfCBcIiArIG5ldyBJbnRsLkRhdGVUaW1lRm9ybWF0KCdlbi1HQicsIHtob3VyMTI6IGZhbHNlLCBob3VyOiAnbnVtZXJpYycsIG1pbnV0ZTogJ251bWVyaWMnfSkuZm9ybWF0KGRhdGUpO1xuICAgIHRlbXAuaW5uZXJIVE1MID0gTWF0aC5yb3VuZCgob2JqLm1haW4udGVtcCAtIDI3MykqMTApLzEwICsgJyAmIzg0NTE7JzsgLy9rZWx2aW5zXG4gICAgd2VhdGhlci5pbm5lclRleHQgPSBvYmoud2VhdGhlclswXS5tYWluOyBcbiAgICBwcmVzc3VyZS5pbm5lclRleHQgPSBvYmoubWFpbi5wcmVzc3VyZSArICcgaFBhJzsgXG4gICAgd2luZC5pbm5lclRleHQgPSBvYmoud2luZC5zcGVlZCArICcgbS9zJztcblxuICAgIGltZy5zcmMgPSBgaHR0cHM6Ly9vcGVud2VhdGhlcm1hcC5vcmcvaW1nL3duLyR7b2JqLndlYXRoZXJbMF0uaWNvbn1AMngucG5nYDsgXG5cbiAgICB0ZW1wLmNsYXNzTGlzdCA9ICd0ZW1wJzsgXG4gICAgdGVtcC5pZCA9ICd0ZW1wJztcbiAgICBsb2MuaWQgPSAnbG9jYXRpb24nOyBcbiAgICBkYXRlVGltZS5pZCA9ICdkYXRlLXRpbWUnOyBcbiAgICB3ZWF0aGVyLmlkID0gJ3dlYXRoZXInOyBcbiAgICBwcmVzc3VyZS5pZCA9ICdwcmVzc3VyZSc7IFxuICAgIHdpbmQuaWQgPSAnd2luZCc7IFxuXG4gICAgY29udGFpbmVyLmFwcGVuZChsb2MpO1xuICAgIGNvbnRhaW5lci5hcHBlbmQoaW1nKTsgXG4gICAgY29udGFpbmVyLmFwcGVuZChkYXRlVGltZSk7IFxuICAgIGNvbnRhaW5lci5hcHBlbmQodGVtcCk7IFxuICAgIGNvbnRhaW5lci5hcHBlbmQod2VhdGhlcik7IFxuICAgIGNvbnRhaW5lci5hcHBlbmQocHJlc3N1cmUpOyBcbiAgICBjb250YWluZXIuYXBwZW5kKHdpbmQpOyBcblxuICAgIGNvbnRhaW5lci5pZCA9ICdtYWluLXdlYXRoZXInO1xuXG5cbiAgICByZXR1cm4gY29udGFpbmVyOyBcbn1cbiIsIlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtYW5hZ2VEaXNwbGF5KG1haW4sIGZ1dHVyZSkge1xuICAgIGNvbnNvbGUubG9nKFwibWFuYWdlZGlzcGxheVwiKVxuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOyBcblxuICAgIGNvbnRhaW5lci5hcHBlbmQobWFpbik7IFxuICAgIGNvbnRhaW5lci5hcHBlbmQoZnV0dXJlKTsgXG4gICAgY29udGFpbmVyLmNsYXNzTmFtZSA9ICdtYWluLWNvbnRhaW5lcic7IFxuXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI21haW4nKS5hcHBlbmQoY29udGFpbmVyKTsgXG5cbiAgICBcbiAgICBcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZ1dHVyZVdlYXRoZXJEaXNwbGF5KG9iaiwgc3RhcnRJZCwgZW5kSWQpIHtcblxuICAgIGNvbnN0IGZ1dHVyZUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOyBcblxuICAgIG9iai5mb3JFYWNoKCAoZm9yZWNhc3QsIGluZGV4KSA9PiB7XG4gICAgICAgIGlmIChpbmRleCA+PSBzdGFydElkICYmIGluZGV4IDw9IGVuZElkKSB7XG4gICAgICAgICAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsgXG4gICAgICAgICAgICBjb25zdCBpbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTsgXG4gICAgICAgICAgICBjb25zdCBkYXRlVGltZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgICAgIGNvbnN0IHRlbXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG5cbiAgICAgICAgICAgIGxldCBkYXRlID0gbmV3IERhdGUoZm9yZWNhc3QuZHRfdHh0KTsgXG5cbiAgICAgICAgICAgIGRhdGVUaW1lLmlubmVyVGV4dCA9IG5ldyBJbnRsLkRhdGVUaW1lRm9ybWF0KCdlbi1HQicsIHt3ZWVrZGF5OiBcInNob3J0XCJ9KS5mb3JtYXQoZGF0ZSkgKyBcIiB8IFwiICsgbmV3IEludGwuRGF0ZVRpbWVGb3JtYXQoJ2VuLUdCJywge2hvdXIxMjogZmFsc2UsIGhvdXI6ICdudW1lcmljJywgbWludXRlOiAnbnVtZXJpYyd9KS5mb3JtYXQoZGF0ZSk7XG4gICAgICAgICAgICB0ZW1wLmlubmVyVGV4dCA9IE1hdGgucm91bmQoKGZvcmVjYXN0Lm1haW4udGVtcCAtIDI3MykqMTApLzEwICsgJyBDJyB8fCAnMCc7IC8va2Vsdmluc1xuICAgICAgICAgICAgaW1nLnNyYyA9IGBodHRwczovL29wZW53ZWF0aGVybWFwLm9yZy9pbWcvd24vJHtmb3JlY2FzdC53ZWF0aGVyWzBdLmljb259QDJ4LnBuZ2BcbiAgICAgICAgICAgIHRlbXAuY2xhc3NMaXN0ID0gJ3RlbXAnOyBcblxuICAgICAgICAgICAgY29udGFpbmVyLmFwcGVuZCh0ZW1wKTsgXG4gICAgICAgICAgICBjb250YWluZXIuYXBwZW5kKGltZyk7IFxuICAgICAgICAgICAgY29udGFpbmVyLmFwcGVuZChkYXRlVGltZSk7IFxuXG4gICAgICAgICAgICBjb250YWluZXIuY2xhc3NOYW1lID0gJ2Z1dHVyZS1jYXJkJzsgXG4gICAgICAgICAgICBmdXR1cmVDb250YWluZXIuYXBwZW5kKGNvbnRhaW5lcik7XG4gICAgICAgIH1cbiAgICB9KTsgXG4gICAgZnV0dXJlQ29udGFpbmVyLmlkID0gJ2Z1dHVyZS13ZWF0aGVyJztcbiAgICByZXR1cm4gZnV0dXJlQ29udGFpbmVyO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF80MDRQYWdlKCkge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOyBcbiAgICBjb25zdCBlcnJvclRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7IFxuICAgIGNvbnN0IGVycm9yVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpOyBcblxuXG4gICAgZXJyb3JUaXRsZS5pbm5lclRleHQgPSAnT2ggTm8hIExvb2tzIGxpa2UgdGhlcmUgd2FzIGFuIGVycm9yLidcbiAgICBlcnJvclRpdGxlLmlkID0gJ2Vycm9yLXRpdGxlJztcbiAgICBlcnJvclRleHQuaW5uZXJUZXh0ID0gJ1BsZWFzZSB0cnkgc2VhcmNoaW5nIGFnYWluLidcbiAgICBlcnJvclRleHQuaWQgPSAnZXJyb3ItdGV4dCc7XG4gICAgY29udGFpbmVyLmlkPSdlcnJvci1jYXJkJzsgXG4gICAgY29udGFpbmVyLmFwcGVuZChlcnJvclRpdGxlKTsgXG4gICAgY29udGFpbmVyLmFwcGVuZChlcnJvclRleHQpOyBcblxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtYWluJykuYXBwZW5kKGNvbnRhaW5lcik7IFxufSIsImltcG9ydCB0b2dnbGUgZnJvbSBcIi4vdG9nZ2xlXCI7XG5pbXBvcnQgaGFuZGxlU2VhcmNoIGZyb20gJy4vaGFuZGxlU2VhcmNoJzsgXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZUhlYWRlcigpIHtcblxuICAgIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2hlYWRlcicpOyBcbiAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gxJyk7IFxuICAgIGNvbnN0IHNlYXJjaENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKTsgXG4gICAgY29uc3Qgc2VhcmNoQm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTsgXG4gICAgY29uc3Qgc2VhcmNoSWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOyBcbiAgICBsZXQgdG9nZ2xlSW5wdXQgPSB0b2dnbGUoKTsgXG4gICAgdG9nZ2xlSW5wdXQuaWQgPSAndG9nZ2xlJzsgXG5cbiAgICB0aXRsZS5pbm5lclRleHQgPSAnV2VhdGhlciBBcHAnO1xuICAgIHNlYXJjaEJveC50eXBlPSd0ZXh0JzsgXG4gICAgc2VhcmNoQm94LnBsYWNlaG9sZGVyID0gJ0NpdHksIGNvdW50cnkgY29kZSc7IFxuICAgIHNlYXJjaEJveC5pZCA9ICdzZWFyY2gtYm94J1xuICAgIHNlYXJjaEljb24uY2xhc3NOYW1lID0gJ2ZhLXNvbGlkIGZhLW1hZ25pZnlpbmctZ2xhc3MnXG4gICAgc2VhcmNoSWNvbi5pZCA9ICdzZWFyY2gtaWNvbidcbiAgICAvLyBzZWFyY2hJY29uLnR5cGUgPSAnYnV0dG9uJztcblxuICAgIHNlYXJjaENvbnRhaW5lci5hcHBlbmQodG9nZ2xlSW5wdXQpO1xuICAgIHNlYXJjaENvbnRhaW5lci5hcHBlbmQoc2VhcmNoQm94KTsgXG4gICAgc2VhcmNoQ29udGFpbmVyLmFwcGVuZChzZWFyY2hJY29uKTtcbiAgICBzZWFyY2hDb250YWluZXIuY2xhc3NOYW1lID0gJ3NlYXJjaENvbnRhaW5lcic7XG5cbiAgICBoZWFkZXIuYXBwZW5kKHRpdGxlKTsgXG4gICAgaGVhZGVyLmFwcGVuZChzZWFyY2hDb250YWluZXIpOyBcblxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNoZWFkZXInKS5hcHBlbmQoaGVhZGVyKTsgXG5cblxuXG5cbiAgICBjb25zdCBzZWFyY2ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdmb3JtJylcbiAgICBjb25zdCB0b2dzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RvZ2dsZScpO1xuICAgIHRvZ3MucXVlcnlTZWxlY3RvcignaW5wdXQnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCl7XG4gICAgICAgIHVwZGF0ZVRlbXAodGhpcyk7IFxuICAgIH0pOyBcbiAgICBzZWFyY2guYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgZnVuY3Rpb24oZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7IFxuICAgICAgICBoYW5kbGVTZWFyY2goKTsgXG4gICAgfSk7XG59XG5cblxuZnVuY3Rpb24gdXBkYXRlVGVtcChpbnB1dCkge1xuICAgIGNvbnN0IGNoZWNrZWQgPSBpbnB1dC5jaGVja2VkOyBcbiAgICBsZXQgY3VyclRlbXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudGVtcCcpXG4gICAgY3VyclRlbXAuZm9yRWFjaCh0ZW1wID0+IHtcbiAgICAgICAgbGV0IHQgPSB0ZW1wLmlubmVyVGV4dC5zcGxpdCgnICcpWzBdO1xuXG4gICAgICAgIGlmIChjaGVja2VkKSB7XG4gICAgICAgICAgICB0ZW1wLmlubmVySFRNTCA9IE1hdGgucm91bmQoKCh0ICogKDkvNSkpICsgMzIpICogMTApLzEwICsgJyAmIzg0NTc7JztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRlbXAuaW5uZXJIVE1MID0gTWF0aC5yb3VuZCgoKHQgIC0zMikqICg1LzkpKSAqIDEwKS8xMCArICcgJiM4NDUxOyc7XG4gICAgICAgIH1cbiAgICB9KVxufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRvZ2dsZSgpIHtcbiAgICBjb25zdCBsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7IFxuICAgIGNvbnN0IGNoZWNrYm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTsgXG4gICAgY29uc3Qgc3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTsgXG5cbiAgICBsYWJlbC5jbGFzc05hbWUgPSAnc3dpdGNoJzsgXG4gICAgY2hlY2tib3gudHlwZSA9ICdjaGVja2JveCdcbiAgICBzcGFuLmNsYXNzTmFtZSA9ICdzbGlkZXIgcm91bmQnOyBcblxuICAgIGxhYmVsLmFwcGVuZChjaGVja2JveCk7IFxuICAgIGxhYmVsLmFwcGVuZChzcGFuKTsgXG5cbiAgICByZXR1cm4gbGFiZWw7IFxufVxuIiwiaW1wb3J0IHJldHJpZXZlRGF0YSBmcm9tIFwiLi9yZXRyaWV2ZURhdGFcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGhhbmRsZVNlYXJjaCgpIHtcbiAgICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzZWFyY2gtYm94JykudmFsdWU7IFxuXG4gICAgLy8gY2xlYXIgbWFpbiB0aGVuIHJlcG9wdWxhdGU7IFxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtYWluJykuaW5uZXJIVE1MID0gJyc7XG5cbiAgICAvLyByZXBvcHVsYXRlIHdpdGggbmV3IGlucHV0OyBcbiAgICBjb25zb2xlLmxvZyhpbnB1dCk7XG4gICAgcmV0cmlldmVEYXRhKGlucHV0KTsgXG5cbiAgICAvLyBjbGVhciBpbnB1dCB2YWx1ZTsgXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3NlYXJjaC1ib3gnKS52YWx1ZSA9ICcnOyBcblxufSIsImltcG9ydCAnLi9zYXNzL21haW4uc2Nzcyc7IFxuaW1wb3J0IHJldHJpZXZlRGF0YSBmcm9tICcuL3JldHJpZXZlRGF0YSc7XG5pbXBvcnQgY3JlYXRlSGVhZGVyIGZyb20gJy4vaGVhZGVyJztcbmltcG9ydCBjcmVhdGVGb290ZXIgZnJvbSAnLi9mb290ZXInO1xuXG5cbmNyZWF0ZUhlYWRlcigpOyBcbnJldHJpZXZlRGF0YSgnRHVyaGFtLCBVSycpOyBcbmNyZWF0ZUZvb3RlcigpOyAiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVGb290ZXIoKSB7XG5cbiAgICBjb25zdCBmb290ZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb290ZXInKTsgXG4gICAgY29uc3QgdG9wID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpOyBcbiAgICBjb25zdCBsaW5rQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7IFxuICAgIGNvbnN0IGdpdGh1YiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsgXG4gICAgY29uc3QgeW91dHViZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsgXG5cbiAgICB0b3AuaW5uZXJUZXh0ID0gYFRoZSBPZGluIFByb2plY3RgOyBcbiAgICB0b3AuaHJlZiA9ICdodHRwczovL3d3dy50aGVvZGlucHJvamVjdC5jb20vJzsgXG4gICAgdG9wLnRhcmdldD0nX2JsYW5rJzsgXG5cbiAgICBnaXRodWIuaW5uZXJIVE1MID0gJzxpIGNsYXNzPVwiZmEtYnJhbmRzIGZhLWdpdGh1YlwiPjwvaT4nOyBcbiAgICBnaXRodWIuaHJlZiA9ICdodHRwczovL2dpdGh1Yi5jb20vY2RldmVsb3BtZW50MDEwLyc7IFxuICAgIGdpdGh1Yi50YXJnZXQgPSAnX2JsYW5rJztcbiAgICBcbiAgICB5b3V0dWJlLmlubmVySFRNTCA9ICc8aSBjbGFzcz1cImZhLWJyYW5kcyBmYS15b3V0dWJlXCI+PC9pPic7IFxuICAgIHlvdXR1YmUuaHJlZiA9ICdodHRwczovL3d3dy55b3V0dWJlLmNvbS9jaGFubmVsL1VDdEhLMjBDNER3NGZjczdrWkRsNFFQUSc7IFxuICAgIHlvdXR1YmUudGFyZ2V0ID0gJ19ibGFuayc7XG5cbiAgICBsaW5rQ29udGFpbmVyLmFwcGVuZChnaXRodWIpOyBcbiAgICBsaW5rQ29udGFpbmVyLmFwcGVuZCh5b3V0dWJlKTtcbiAgICBsaW5rQ29udGFpbmVyLmNsYXNzTmFtZSA9ICdsaW5rQ29udGFpbmVyJztcblxuICAgIGZvb3Rlci5hcHBlbmQodG9wKTsgXG4gICAgZm9vdGVyLmFwcGVuZChsaW5rQ29udGFpbmVyKTsgXG5cbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZm9vdGVyJykuYXBwZW5kKGZvb3Rlcik7IFxufSJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXN5bmMiLCJyZXRyaWV2ZURhdGEiLCJsb2NhdGlvbiIsInVybCIsInJlc3BvbnNlIiwiZmV0Y2giLCJ3ZWF0aGVyIiwiY29uc29sZSIsImxvZyIsIm1haW5EaXNwbGF5IiwiY29udGFpbmVyIiwibG9jIiwiaW1nIiwiZGF0ZVRpbWUiLCJ0ZW1wIiwicHJlc3N1cmUiLCJ3aW5kIiwiZGF0ZSIsIkRhdGUiLCJkdF90eHQiLCJpbm5lclRleHQiLCJJbnRsIiwiRGF0ZVRpbWVGb3JtYXQiLCJ3ZWVrZGF5IiwiZm9ybWF0IiwiaG91cjEyIiwiaG91ciIsIm1pbnV0ZSIsImlubmVySFRNTCIsIk1hdGgiLCJyb3VuZCIsIm1haW4iLCJzcGVlZCIsInNyYyIsImljb24iLCJjbGFzc0xpc3QiLCJhcHBlbmQiLCJkaXNwbGF5TWFpbldlYXRoZXIiLCJjaXR5IiwibmFtZSIsImNvdW50cnkiLCJmdXR1cmUiLCJjbGFzc05hbWUiLCJtYW5hZ2VEaXNwbGF5Iiwic3RhcnRJZCIsImVuZElkIiwiZnV0dXJlQ29udGFpbmVyIiwiZm9yRWFjaCIsImZvcmVjYXN0IiwiZnV0dXJlV2VhdGhlckRpc3BsYXkiLCJwcm9jZXNzRGF0YSIsImpzb24iLCJlcnIiLCJlcnJvclRleHQiLCJlcnJvclRpdGxlIiwiXzQwNFBhZ2UiLCJoZWFkZXIiLCJ0aXRsZSIsInNlYXJjaENvbnRhaW5lciIsInNlYXJjaEJveCIsInNlYXJjaEljb24iLCJ0b2dnbGVJbnB1dCIsImxhYmVsIiwiY2hlY2tib3giLCJzcGFuIiwidHlwZSIsInRvZ2dsZSIsInBsYWNlaG9sZGVyIiwic2VhcmNoIiwiYWRkRXZlbnRMaXN0ZW5lciIsImlucHV0IiwiY2hlY2tlZCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJ0Iiwic3BsaXQiLCJ1cGRhdGVUZW1wIiwicHJldmVudERlZmF1bHQiLCJ2YWx1ZSIsImhhbmRsZVNlYXJjaCIsImNyZWF0ZUhlYWRlciIsImZvb3RlciIsInRvcCIsImxpbmtDb250YWluZXIiLCJnaXRodWIiLCJ5b3V0dWJlIiwiaHJlZiIsImNyZWF0ZUZvb3RlciJdLCJzb3VyY2VSb290IjoiIn0=